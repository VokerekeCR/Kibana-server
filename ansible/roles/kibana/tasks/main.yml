---
#
# Installing Java 8
#
# Add the Java ppa repository
- name: Add Java repository
  apt_repository:
   repo: ppa:linuxuprising/java
# Automatically accepts the Oracle License popup in the terminal
- name: Automatically select the Oracle License
  shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
# Install Java 8
- name: Install the Java 8 package
  apt:
   name: openjdk-8-jdk
   state: present
   update_cache: yes
# Installing Kibana
#
# Add Kibana APT-repository
- name: Add an Apt signing key for ELK stack
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
- name: Add Elastic source list
  apt_repository:
    repo: deb https://artifacts.elastic.co/packages/7.x/apt stable main
    state: present
- name: Update package lists
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
- name: Install Kibana
  apt:
    name: kibana
    state: present
# Update kibana config file to only accept local connections
- name: Updating the config file to restrict outside access
  lineinfile:
   destfile: /etc/kibana/kibana.yml
   regexp: 'server.host:'
   line: 'server.host: localhost'
# Enable Kibana service
- name: Enabling Kibana service
  systemd:
   name: kibana
   enabled: yes
   daemon_reload: yes
# Start Kibana service
- name: Starting Kibana service
  systemd:
   name: kibana
   state: started
#
# Installing Nginx
#
# Install Nginx
- name: Update repositories cache and install Nginx
  apt:
   name: nginx
   update_cache: yes
# Create /etc/nginx/conf.d/ directory
- name: Create nginx directory structure
  file: 
   path: /etc/nginx/conf.d/
   state: directory
   mode: 0755
# Deploy kibana.conf with FQDN
- name: Setup Nginx reverse proxy for kibana
  template:
   src: kibana.conf.j2
   dest: /etc/nginx/sites-available/default
   owner: root
   group: root
   mode: 0644
  register: nginx_needs_restart
# Enable nginx service
- name: Enabling Nginx service
  systemd:
   name: nginx
   enabled: yes
# Start Nginx service
- name: Starting Nginx service
  systemd:
   name: nginx
   state: started
   daemon_reload: yes
# Install Pexpect to handle promts of the terminal
- name: Installing Python Pexpect
  apt:
   name: python-pexpect
   update_cache: yes
# Writes the create user script in the temp directory
- name: Create kibana admin user
  template:
   src: kibanaAdmin.j2
   dest: /tmp/createUser
   owner: root
   group: root
   mode: 0744
# Runs the script to create Kibana admin user
- name: Create Kibana admin user
  expect:
     command: bash /tmp/createUser
     responses:
       'Password:' : "{{kibana_password}}"
# Restart Nginx service
- name: Restart Nginx service
  systemd:
   name: nginx
   state: reloaded
   daemon_reload: yes